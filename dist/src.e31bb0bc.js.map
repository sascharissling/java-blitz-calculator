{"version":3,"sources":["lib/operators.js","index.js"],"names":["sum","first","second","sub","mult","divide","firstInput","document","querySelector","secondInput","sumButton","subButton","multButton","divideButton","result","clearButton","crossButton","countButton","addEventListener","innerHTML","newElement","createElement","body","insertBefore","firstChild","value","cross","replace","toString","split","map","Number","reduce","acc","current","insertLog","number","length","firstNumber","parseInt","secondNumber","content","className","id"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["export function sum(first, second) {\n  return first + second;\n}\n\nexport function sub(first, second) {\n  return first - second;\n}\n\nexport function mult(first, second) {\n  return first * second;\n}\n\nexport function divide(first, second) {\n  return first / second;\n}\n","\"use strict\";\n\nimport { sum, sub, mult, divide } from \"./lib/operators\";\n\nconst firstInput = document.querySelector(\"[name=first]\");\nconst secondInput = document.querySelector(\"[name=second]\");\nconst sumButton = document.querySelector(\".sum\");\nconst subButton = document.querySelector(\".sub\");\nconst multButton = document.querySelector(\".mult\");\nconst divideButton = document.querySelector(\".divide\");\nconst result = document.querySelector(\"#result\");\nconst clearButton = document.querySelector(\"#clear\");\nconst crossButton = document.querySelector(\"#cross\");\nconst countButton = document.querySelector(\"#count\");\n\n// CLEAR BUTTON\nclearButton.addEventListener(\"click\", function() {\n  document.querySelector(\".log\").innerHTML = \"\";\n  let newElement = document.createElement(\"div\");\n  newElement.innerHTML = \"\";\n  document.body\n    .querySelector(\".log\")\n    .insertBefore(newElement, document.body.querySelector(\".log\").firstChild);\n});\n\n// CROSS Button (Only Works >= 0 -- WHY?)\ncrossButton.addEventListener(\"click\", function() {\n  let value = document.body.querySelector(\".log\").firstChild.innerHTML;\n  let cross = value\n    .replace(\".\", \"\")\n    .replace(\"-\", \"\")\n    .toString()\n    .split(\"\")\n    .map(Number)\n    .reduce(function(acc, current) {\n      return acc + current;\n    }, 0);\n  insertLog(cross);\n});\n\n// COUNT Button\ncountButton.addEventListener(\"click\", function() {\n  let number = document.body.querySelector(\".log\").firstChild.innerHTML;\n  insertLog(number.toString().length);\n});\n\n// + BUTTON\nsumButton.addEventListener(\"click\", function() {\n  const firstNumber = parseInt(firstInput.value);\n  const secondNumber = parseInt(secondInput.value);\n  result.innerHTML = insertLog(sum(firstNumber, secondNumber));\n});\n\n// - BUTTON\nsubButton.addEventListener(\"click\", function() {\n  const firstNumber = parseInt(firstInput.value);\n  const secondNumber = parseInt(secondInput.value);\n  result.innerHTML = insertLog(sub(firstNumber, secondNumber));\n});\n\n// - * BUTTON\nmultButton.addEventListener(\"click\", function() {\n  const firstNumber = parseInt(firstInput.value);\n  const secondNumber = parseInt(secondInput.value);\n  result.innerHTML = insertLog(mult(firstNumber, secondNumber));\n});\n\n// - / BUTTON\ndivideButton.addEventListener(\"click\", function() {\n  const firstNumber = parseInt(firstInput.value);\n  const secondNumber = parseInt(secondInput.value);\n  result.innerHTML = insertLog(divide(firstNumber, secondNumber));\n});\n\n//add new div test\nfunction insertLog(content) {\n  let newElement = document.createElement(\"div\");\n  newElement.className = \"equals\";\n  newElement.id = \"result\";\n  newElement.innerHTML = content;\n  document.body\n    .querySelector(\".log\")\n    .insertBefore(newElement, document.body.querySelector(\".log\").firstChild);\n}\n"]}